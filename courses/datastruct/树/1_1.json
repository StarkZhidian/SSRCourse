[
  {
    "basicData": {
      "text": "\n在线性结构中每一个元素仅有线性关系，每个元素最多只有一个直接前驱和直接后继，\n但是很多情况下，还有很多层次关系的情况需要处理，\n比如说我们的电脑中的文件夹都有不定个数的子文件夹，对于每个子文件夹来说，也会有不定个数的子文件夹...\n\n对于这些情况，我们就需要另外一种数据结构来描述，即为：\"树(Tree)\"，\n相对于线性结构来说，树是一种有明显的层次关系的数据结构。\n\n树是 n(n≥0)个结点的有限集。\nn=0时称为空树。\n在任意一棵非空树中：\n(1) 有且仅有一个特定的称为根(Root)的结点；\n\n\n(2) 当n>1时，其余结点可分为 m(m>0)个互不相交的有限集T1、T2、……、Tm，\n其中每一个集合本身又是一棵树，称为根的子树，并且子树不相交\n下面是树的结构图：\n\t",
      "parent_dir_path": "datastruct/树"
    },
    "contentType": 0
  },
  {
    "basicData": {
      "image_url": "shu_1.png",
      "parent_dir_path": "datastruct/树"
    },
    "contentType": 1
  },
  {
    "basicData": {
      "text": "\n下面是关于树的一些术语：\n节点的度：一个节点含有的子树的个数称为该节点的度(或者是直接子节点数)；\n\n比如上图中 A节点的度为 2 ，B节点的度为 1，D节点的度为3。\n\n叶节点或终端节点：度为0的节点称为叶节点；\n\n上图中的 G、H、I、E、J 节点都是叶节点。\n\n非终端节点或分支节点：度不为0的节点；\n\n上图中除了G、H、I、E、J 节点，其余都是非终端节点。\n\n双亲节点(父节点)：若一个节点含有子节点，则这个节点称为其子节点的双亲节点；\n\n上图中 A节点为 B、C节点的双亲节点，C节点为 E、F节点的双亲节点。\n\n孩子节点(子节点)：一个节点含有的子树的根节点(直接子节点)称为该节点的子节点；\n\n上图中 B、C节点为 A节点的子节点，G、H、I 节点为 D节点的子节点。\n\n兄弟节点：具有相同父节点的节点互称为兄弟节点；\n\n上图中 B、C节点为兄弟节点(双亲都是 A节点)，G、H、I 节点为兄弟节点(双亲都是 D节点)。\n\n树的度：一棵树中，最大的节点的度称为树的度；\n\n上图中 D节点的度最大为 3 ，所以上图的树的度为 3 。\n\n节点的层次：从根开始定义起，根为第1层，根的子节点为第2层，以此类推；\n\n上图中 A节点(根节点)处于第一层，B、C 节点处于第二层...\n树的高度(深度)：树中节点的最大层次；\n\n上图中 G、H、I、J 节点处于树的最底层(第 4 层)，所以树的高度为 4 。\n\n堂兄弟节点：双亲在同一层的节点互为堂兄弟(要求双亲编号不同)；\n\n上图中 D节点和 E节点是堂兄弟节点，D节点和 F节点也是堂兄弟节点(双亲不同)。\n\n节点的祖先：从根到该节点所经分支上的所有节点；\n\n上图中 D节点的祖先为 A、B节点。\nJ节点的祖先为 A、C、F节点。\n\n子孙：以某节点为根的子树中任一节点都称为该节点的子孙。\n\n上图中 A节点的子孙是除了 A节点以外的所有节点，C节点的子孙是 E、F、J节点。\n\n\t",
      "parent_dir_path": "datastruct/树"
    },
    "contentType": 0
  }
]