[
  
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "在一个具有n个顶点的无向连通图中至少有（ ）条边。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n+1"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n-1"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n/2"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "C",
        "right_option_index": 2
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "设G是一个含有6个顶点的无向图，该图至多有（ ）条边。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "5"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "6"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "7"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "15"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "D",
        "right_option_index": 3
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "在一个具有n个顶点的有向图中，构成强连通图时至少有（ ）条边。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n-1"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n+1"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "n/2"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "A",
        "right_option_index": 0
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "非空无向图的邻接矩阵是一个（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "对称矩阵			"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "零矩阵			"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "上三角矩阵			"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "	对角矩阵"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "A",
        "right_option_index": 0
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "若用邻接矩阵表示一个含有n个顶点不带权的有向图，则其中第i（0≤i≤n-1）列中包含的1的个数为（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "图中顶点i的入度"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "图中顶点i的出度"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "图中边的数目"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "图中连通分量的数目"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "A",
        "right_option_index": 2
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "如果从无向图的任一顶点出发进行一次广度优先遍历即可访问所有顶点，则该图一定是（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "完全图"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "连通图"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "有回路"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "一棵树"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "B",
        "right_option_index": 1
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "一个有向图G=(V,E)，V={0,1,2,3,4}，E={<0,1>,<1,2>,<0,3>,<1,2>,<1,4>,<2,4>,<4,3>}，现按深度优先遍历算法遍历，从顶点0出发，所得到的顶点序列是（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "0,1,2,3,4"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "	0,1,2,4,3"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "0,1,3,4,2"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "0,1,4,2,3"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "B",
        "right_option_index": 1
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "以下关于广度优先遍历的叙述中正确的是（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "广度优先遍历不适合有向图。"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "对任何有向图调用一次广度优先遍历算法便可访问所有的顶点"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "对一个强连通图调用一次广度优先遍历算法便可访问所有的顶点"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "对任何非强连通图需要多次调用广度优先遍历算法才可访问所有的顶点"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "C",
        "right_option_index": 2
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "任何一个带权无向连通图（ ）最小生成树。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "只有一棵			"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "有一棵或多棵		"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "一定有多棵		"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "可能不存在"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "B",
        "right_option_index": 1
              }
    },
    "contentType": 6
  },
  {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "用Prim算法求一个连通的带权图的最小代价生成树，在算法执行的某时刻，已选取的顶点集合U＝{1,2,3}，已选取的边的集合TE＝{(1,2)，(2,3)}，要选取下一条权值最小的边，应当从（ ）组中选取。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "{(1,4)，(3,4)，(3,5)，(2,5)}"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "{(4,5)，(1,3)，(3,5)}"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "{(1,2)，(2,3)，(3,5)}"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "{(3,4)，(3,5)，(4,5)，(1,4)}"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "A",
        "right_option_index": 0
              }
    },
    "contentType": 6
  },
   {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "Dijkstra算法是（ ）方法求出图中从某点到其余顶点最短路径的。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "按长度递减的顺序求出图的某顶点到其余顶点的最短路径"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "按长度递增的顺序求出图的某顶点到其余顶点的最短路径"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "通过深度优先遍历求出图中某顶点到其余顶点的最短路径"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "通过广度优先遍历求出图中某顶点到其余顶点的最短路径"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "B",
        "right_option_index": 1
              }
    },
    "contentType": 6
  },
   {
    "basicData": {
      "question_desc_list": [
        {
          "basicData": {
            "text": "设有一个不带权的有向图G=（V，E），V={a,b,c,d,e}，E={<a,b>,<a,c>,<d,c>,<d,e>,<b,e>,<c,e>}，对该图进行拓扑排序，以下序列中不是拓扑序列的是（ ）。"
          },
          "contentType": 0
        },
        {
          "basicData": {
            "text": "选择题，选择答案"
          },
          "contentType": 0
        }
      ],
      "question_option_list": [
        {
          "basicData": {
            "option_name": "A",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "adcbe			"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "B",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "dabce				"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "C",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "abdce		"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        },
        {
          "basicData": {
            "option_name": "D",
            "option_desc_list": [
              {
                "basicData": {
                  "text": "	abcde"
                },
                "contentType": 0
              }
            ]
          },
          "contentType": -2
        }
      ],
      "question_right_answer": {
        "right_option_name": "D",
        "right_option_index": 3
              }
    },
    "contentType": 6
  }
  
]