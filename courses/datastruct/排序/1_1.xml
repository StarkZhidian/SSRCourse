<?xml version="1.0" encoding="UTF-8"?>
<contents>
	<text>
相信大家都玩过扑克牌，插入排序就像我们摸扑克牌一样。"换行"
摸到一张扑克牌，我们就可以按照其花色大小将它插入到对应位置，使得已经摸到的牌有序。"换行"
插入排序正是这种思想：首先，把数组元素中的第一个元素看成是有序的，从第二个元素开始，我们每次取出一个元素，并且将这个元素插入到前面已经有序的数组中的对应位置，使得插入后的整个数组元素仍有序，直到所有元素都插入完成。"换行""换行"
看一个简单的例子：假设我们需要把数组：3 1 2 4 5 进行从小到大排序，采用直接插入排序的步骤如下："换行"
1、先将数组的第一个元素看成有序的，即为 3 。"换行"
2、接下来从数组第二个元素开始，每一个元素都和前面已经有序的数组元素进行对比，找到第一个比该元素小的元素的位置(位置不能小于 0)并且插入在其后面。例如 1 比 3 小，那么把元素 1 前移，但是因为元素 3 所在数组下标为 0 ，所以元素 1 只能插入在数组下标为 0 的位置而不能继续前移(或者理解成元素 1 已经成为当前有序的元素中最小的元素)。
并且元素 3 向后移动到元素 1 的位置。"换行"
此时的数组元素顺序就变成了 1 3 2 4 5 。那么接下来是数组的第三个元素，即为 2 ，因为 2 小于 3，那么把元素 2 向前移，
此时只需移动一个位置元素 2 就找到了比它小的元素：1，那么把元素 2 插入到元素 1 后面并且把后面的所有元素向后移动一位。"换行"
此时的数组元素就变成了 1 2 3 4 5，接下来继续对元素 4 和元素 5 移动，因为此时的数组元素已经为有序，所以并不需要移动数组元素，即排序结束。"换行"
关于直接插入排序的实现，请参考 "动画"和"代码"部分。
	</text>
	<animation html_path="" animation_name="排序:直接插入排序"></animation>
	<code>

/**
* C语言实现直接插入排序
* Author：指点 
*/
#include &lt;stdio.h&gt;
#define N 100
int array[N];

// 直接插入排序，a 待排序为数组，n 为数组元素个数 
void insertSort(int a[], int n) {
int i, j, v;
// 把数组第一个元素看成有序的，从数组第二个元素开始进行排序 
for(i = 1; i &lt; n; i++) {
	v = a[i];
	j = i-1;
	// 将在该元素前面并且值比其大的元素向后移，这里是一边比较一边移动元素位置
	while(j &gt;= 0 &amp;&amp; a[j] &gt; v) {
		a[j+1] = a[j];
		j--;
	}
	// 完成元素插入 
	a[j+1] = v;
}
}

// 打印出数组信息 
void print(int a[], int n) {
int i;
for(i = 0; i &lt; n; i++) {
	printf("%d ", a[i]);
}
printf("\n");
}

int main() {
int i, n;
printf("输入数组元素的个数(1~100): ");
scanf("%d", &amp;n);
printf("输入%d个数组元素：\n", n);
for(i = 0; i &lt; n; i++) {
	scanf("%d", array+i);
}
printf("排序之前的数组元素：\n");
print(array, n);
insertSort(array, n);
printf("排序之后的数组元素：\n");
print(array, n);

return 0;
} 
	</code>
	<text>
代码中实现插入排序部分采用双重循环，很明显事件复杂度为 O(n*n)。"换行"
借用了一个中间变量 v 来保存要排序的变量的值，空间复杂度为 O(1)。"换行"
下面是程序的运行结果：
	</text>
	<img>
直接插入排序_1.png
	</img>
	<link>
参考博客：http://blog.csdn.net/hacker_zhidian/article/details/61616342
	</link>
</contents>